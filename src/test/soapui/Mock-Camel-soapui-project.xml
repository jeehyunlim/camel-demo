<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="a0157966-0935-4c0e-8acc-d80c85bdb021" activeEnvironment="Default" name="REST Project 1" resourceRoot="" soapui-version="5.5.0" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:RestService" id="45d5fbcb-54da-46ec-9931-9b5661c201bc" wadlVersion="http://wadl.dev.java.net/2009/02" name="http://localhost:9090" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>http://LAPTOP-R4NMCEUN:8080/</con:endpoint><con:endpoint>http://LAPTOP-R4NMCEUN:9090/</con:endpoint><con:endpoint>http://localhost:9090</con:endpoint></con:endpoints><con:resource name="Hello" path="/hello" id="a709e634-7735-4b75-8ccf-9c3c9e2df755"><con:settings/><con:parameters/><con:method name="Hello 1" id="32904202-a707-4cbf-a1d4-fb5173798d49" method="POST"><con:settings/><con:parameters/><con:request name="Hello" id="f31d0ace-b58d-480e-ae82-c290bf6c2341" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@strip-whitespaces">false</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:9090</con:endpoint><con:request/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:restMockService id="0131b119-42de-4212-9003-b73ac5b17892" port="8080" path="/" host="LAPTOP-R4NMCEUN"><con:settings/><con:properties/></con:restMockService><con:restMockService id="83d9a3b1-e441-4e2d-90fd-16dc48944b57" port="9090" path="/" host="LAPTOP-R4NMCEUN" name="HelloServer" docroot=""><con:settings/><con:properties/><con:restMockAction name="/hello" method="POST" resourcePath="/hello" id="5d753512-7cb2-4bd3-9634-89407cc427f2"><con:settings/><con:defaultResponse>Response 1</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchPath>/*
// Script dispatcher is used to select a response based on the incoming request.
// Here are few examples showing how to match based on path, query param, header and body

// Match based on path
def requestPath = mockRequest.getPath()
log.info "Path: "+ requestPath

if( requestPath.contains("json") )
{
    // return the name of the response you want to dispatch
    return "JSON Response"
}


// Match based on query parameter
def queryString = mockRequest.getRequest().getQueryString()
log.info "QueryString: " + queryString

if( queryString.contains("stockholm") )
{
    // return the name of the response you want to dispatch
    return "Response Stockholm"
}
else if( queryString.contains("london") )
{
    // return the name of the response you want to dispatch
    return "Response London"
}


// Match based on header
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList

if( acceptEncodingHeaderList.contains("gzip,deflate") )
{
    // return the name of the response you want to dispatch
    return "GZiped Response"
}


// Match based on body
def requestBody = mockRequest.getRequestContent()
log.info "Request body: " + requestBody

if( requestBody.contains("some data") )
{
    // return the name of the response you want to dispatch
    return "Response N"
}
*/
</con:dispatchPath><con:response name="Response 2" id="fd92230d-0d93-43d5-b220-9553ddda2460" httpResponseStatus="200" mediaType="application/xml"><con:settings/><con:responseContent><![CDATA[<?xml version="1.0" encoding="UTF-8"?><HelloServer><ResMsgId>1</ResMsgId><ResMsg>hello world Back</ResMsg></HelloServer>]]></con:responseContent></con:response></con:restMockAction></con:restMockService><con:properties/><con:wssContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:sensitiveInformation/></con:soapui-project>